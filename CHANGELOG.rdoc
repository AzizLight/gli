== Changelog
=== 1.2.1 - 11/26/2010

* Changed default data structure of options *back* to a <tt>Hash</tt>.  If you want to use the <tt>OpenStruct</tt> subclass <tt>Options</tt>, simply put <tt>use_openstruct true</tt> in your command line definition.

=== 1.2.0 - 11/26/2010

* Added ability to use +help+ command to list commands suitable for creating bash completion script
* <code>options</code> and <code>global_options</code> will now contain values for all aliases of each flag and switch, so if you created a flag with <code>flag [:f,:flag]</code> and the user specifies <code>-f foo</code> on the command line, both <code>options[:f]</code> and <code>options[:flag]</code> will have the value <code>foo</code>.  Same behavior for <code>--flag=foo</code>.
* You may now no-longer use names that have already been used.  So if you declare a switch <code>switch :foo</code> and then later declare a flag <code>flag [:f,:foo]</code>, you get an <code>ArgumentError</code>. This is only checked within relevant scope, so you can still use the same option names between commands, and you can still have the same option name once in global and once in command scope.  This is really a bugfix as the behavior of GLI was not clear before.
* <tt>long_desc</tt> now shows up in generated rdoc for flags and switches
* Scaffoling now generates a usable <code>Gemfile</code> for bundler
* More direct support for version numbers in GLI-managed apps

=== 1.1.3 - 10/24/2010

* Changed the way we locate <code>__FILE__</code>'s directory; if it's a symlink it would've have worked.  Required adding <code>:realpath</code> method to <code>File</code> for pre 1.9.2 rubies

=== 0.0 - 1.1.2

No changelog tracking was done for these versions :(
