var search_data = {"index":{"searchIndex":["gli","command","commandlinetoken","defaulthelpcommand","flag","initconfig","rdoccommand","scaffold","switch","options","<=>()","[]()","[]=()","action()","all_forms()","arg_name()","arg_name()","arguments_description()","clear_nexts()","command()","config_file()","create_scaffold()","default_value()","default_value()","desc()","desc()","execute()","execute()","execute()","execute()","find_me()","find_me()","flag()","flag()","flags()","get_value!()","get_value!()","long_desc()","mk_binfile()","mk_gemspec()","mk_rakefile()","mk_readme()","mkdirs()","name_as_string()","name_as_string()","names()","new()","new()","new()","new()","new()","new()","new()","output_flags()","reset()","switch()","switch()","switches()","usage()","usage()","readme.rdoc","gli","gli.rb","command.rb","command_line_token.rb","flag.rb","options.rb","switch.rb","help.rb","initconfig.rb","rdoc.rb","scaffold.rb"],"longSearchIndex":["lib/support/scaffold.rb","gli","gli","gli","gli","gli","gli","gli","gli","lib/gli/options.rb","gli::commandlinetoken","options","options","gli::command","gli::flag","gli","gli::command","gli::command","gli::command","gli","gli","gli::scaffold","gli","gli::command","gli","gli::command","gli::command","gli::defaulthelpcommand","gli::initconfig","gli::rdoccommand","gli::flag","gli::switch","gli","gli::command","gli::command","gli::flag","gli::switch","gli","gli::scaffold","gli::scaffold","gli::scaffold","gli::scaffold","gli::scaffold","gli::command","gli::switch","gli::command","gli::command","gli::commandlinetoken","gli::defaulthelpcommand","gli::flag","gli::initconfig","gli::rdoccommand","gli::switch","gli::rdoccommand","gli","gli","gli::command","gli::command","gli::command","gli::commandlinetoken","files/readme_rdoc.html","files/bin/gli.html","files/lib/gli_rb.html","files/lib/gli/command_rb.html","files/lib/gli/command_line_token_rb.html","files/lib/gli/flag_rb.html","files/lib/gli/options_rb.html","files/lib/gli/switch_rb.html","files/lib/support/help_rb.html","files/lib/support/initconfig_rb.html","files/lib/support/rdoc_rb.html","files/lib/support/scaffold_rb.html"],"info":[["GLI","lib/gli/command.rb","classes/GLI.html"," < ","A means to define and parse a command line interface that works as Git's does, in that you specify global",1],["Command","GLI","classes/GLI/Command.html"," < CommandLineToken","A command to be run, in context of global flags and switches ",1],["CommandLineToken","GLI","classes/GLI/CommandLineToken.html"," < Object","Logical element of a command line, mostly so that subclasses can have similar initialization and interface",1],["DefaultHelpCommand","GLI","classes/GLI/DefaultHelpCommand.html"," < Command","",1],["Flag","GLI","classes/GLI/Flag.html"," < Switch","Defines a flag, which is to say a switch that takes an argument ",1],["InitConfig","GLI","classes/GLI/InitConfig.html"," < Command","",1],["RDocCommand","GLI","classes/GLI/RDocCommand.html"," < Command","",1],["Scaffold","GLI","classes/GLI/Scaffold.html"," < Object","",1],["Switch","GLI","classes/GLI/Switch.html"," < CommandLineToken","Defines a command line switch ",1],["Options","lib/gli/options.rb","classes/Options.html"," < OpenStruct","",1],["<=>","GLI::CommandLineToken","classes/GLI/CommandLineToken.html#M000017","(other)","",2],["[]","Options","classes/Options.html#M000025","(k)","",2],["[]=","Options","classes/Options.html#M000028","(k, v)","",2],["action","GLI::Command","classes/GLI/Command.html#M000011","(&block)","",2],["all_forms","GLI::Flag","classes/GLI/Flag.html#M000024","(joiner=', ')","Returns a string of all possible forms of this flag.  Mostly intended for printing to the user. ",2],["arg_name","GLI","classes/GLI.html#M000038","(name)","describe the argument name of the next flag ",2],["arg_name","GLI::Command","classes/GLI/Command.html#M000007","(name)","describe the argument name of the next flag ",2],["arguments_description","GLI::Command","classes/GLI/Command.html#M000001","()","",2],["clear_nexts","GLI::Command","classes/GLI/Command.html#M000013","()","",2],["command","GLI","classes/GLI.html#M000045","(*names)","Define a command. ",2],["config_file","GLI","classes/GLI.html#M000043","(filename)","Sets the config file.  If not an absolute path sets the path to the user's home directory ",2],["create_scaffold","GLI::Scaffold","classes/GLI/Scaffold.html#M000071","(root_dir,create_test_dir,create_ext_dir,project_name,commands,force=false,dry_run=false)","",2],["default_value","GLI","classes/GLI.html#M000039","(val)","set the default value of the next flag ",2],["default_value","GLI::Command","classes/GLI/Command.html#M000008","(val)","set the default value of the next flag ",2],["desc","GLI","classes/GLI.html#M000036","(description)","describe the next switch, flag, or command.  This should be a short, one-line description ",2],["desc","GLI::Command","classes/GLI/Command.html#M000006","(description)","describe the next switch or flag ",2],["execute","GLI::Command","classes/GLI/Command.html#M000014","(global_options,options,arguments)","",2],["execute","GLI::DefaultHelpCommand","classes/GLI/DefaultHelpCommand.html#M000032","(global_options,options,arguments)","",2],["execute","GLI::InitConfig","classes/GLI/InitConfig.html#M000061","(global_options,options,arguments)","",2],["execute","GLI::RDocCommand","classes/GLI/RDocCommand.html#M000067","(g,o,a)","",2],["find_me","GLI::Flag","classes/GLI/Flag.html#M000023","(arg)","",2],["find_me","GLI::Switch","classes/GLI/Switch.html#M000029","(arg)","Finds the switch in the given arg, returning the arg to keep. Returns an array of size 2: [0] true or",2],["flag","GLI","classes/GLI.html#M000041","(*names)","Create a flag, which is a switch that takes an argument ",2],["flag","GLI::Command","classes/GLI/Command.html#M000009","(*names)","",2],["flags","GLI::Command","classes/GLI/Command.html#M000004","()","",2],["get_value!","GLI::Flag","classes/GLI/Flag.html#M000019","(args)","",2],["get_value!","GLI::Switch","classes/GLI/Switch.html#M000027","(args)","Given the argument list, scans it looking for this switch returning true if it's in the argumennt list",2],["long_desc","GLI","classes/GLI.html#M000037","(long_desc)","Provide a longer, more detailed description.  This will be reformatted and wrapped to fit in 80 columns",2],["mk_binfile","GLI::Scaffold","classes/GLI/Scaffold.html#M000075","(root_dir,create_ext_dir,force,dry_run,project_name,commands)","",2],["mk_gemspec","GLI::Scaffold","classes/GLI/Scaffold.html#M000073","(root_dir,dry_run,project_name)","",2],["mk_rakefile","GLI::Scaffold","classes/GLI/Scaffold.html#M000074","(root_dir,dry_run,project_name,create_test_dir)","",2],["mk_readme","GLI::Scaffold","classes/GLI/Scaffold.html#M000072","(root_dir,dry_run,project_name)","",2],["mkdirs","GLI::Scaffold","classes/GLI/Scaffold.html#M000076","(dirs,force,dry_run)","",2],["name_as_string","GLI::Command","classes/GLI/Command.html#M000012","(name)","",2],["name_as_string","GLI::Switch","classes/GLI/Switch.html#M000030","(name)","",2],["names","GLI::Command","classes/GLI/Command.html#M000002","()","",2],["new","GLI::Command","classes/GLI/Command.html#M000000","(names,description,arguments_name=nil,long_desc=nil)","Create a new command [names] the name or names of this command (symbol or Array of symbols) [description]",2],["new","GLI::CommandLineToken","classes/GLI/CommandLineToken.html#M000015","(names,description,long_description=nil)","",2],["new","GLI::DefaultHelpCommand","classes/GLI/DefaultHelpCommand.html#M000031","(*omit_from_list)","",2],["new","GLI::Flag","classes/GLI/Flag.html#M000018","(names,description,argument_name=nil,default=nil,long_desc=nil)","",2],["new","GLI::InitConfig","classes/GLI/InitConfig.html#M000060","(config_file_name)","",2],["new","GLI::RDocCommand","classes/GLI/RDocCommand.html#M000066","()","",2],["new","GLI::Switch","classes/GLI/Switch.html#M000026","(names,description,long_desc=nil)","",2],["output_flags","GLI::RDocCommand","classes/GLI/RDocCommand.html#M000070","(file,flags)","",2],["reset","GLI","classes/GLI.html#M000035","()","Reset the GLI module internal data structures; mostly for testing ",2],["switch","GLI","classes/GLI.html#M000042","(*names)","Create a switch ",2],["switch","GLI::Command","classes/GLI/Command.html#M000010","(*names)","Create a switch ",2],["switches","GLI::Command","classes/GLI/Command.html#M000005","()","",2],["usage","GLI::Command","classes/GLI/Command.html#M000003","()","",2],["usage","GLI::CommandLineToken","classes/GLI/CommandLineToken.html#M000016","()","",2],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= Git-Like Interface Command Line Parser  Author::  Dave Copeland (mailto:davetron5000 at g mail dot",3],["gli","files/bin/gli.html","files/bin/gli.html","","",3],["gli.rb","files/lib/gli_rb.html","files/lib/gli_rb.html","","",3],["command.rb","files/lib/gli/command_rb.html","files/lib/gli/command_rb.html","","",3],["command_line_token.rb","files/lib/gli/command_line_token_rb.html","files/lib/gli/command_line_token_rb.html","","",3],["flag.rb","files/lib/gli/flag_rb.html","files/lib/gli/flag_rb.html","","",3],["options.rb","files/lib/gli/options_rb.html","files/lib/gli/options_rb.html","","",3],["switch.rb","files/lib/gli/switch_rb.html","files/lib/gli/switch_rb.html","","",3],["help.rb","files/lib/support/help_rb.html","files/lib/support/help_rb.html","","",3],["initconfig.rb","files/lib/support/initconfig_rb.html","files/lib/support/initconfig_rb.html","","",3],["rdoc.rb","files/lib/support/rdoc_rb.html","files/lib/support/rdoc_rb.html","","",3],["scaffold.rb","files/lib/support/scaffold_rb.html","files/lib/support/scaffold_rb.html","","",3]]}}